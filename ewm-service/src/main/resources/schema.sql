drop table IF EXISTS users CASCADE;
drop table IF EXISTS categories CASCADE;
drop table IF EXISTS events CASCADE;
drop table IF EXISTS locations CASCADE;
drop table IF EXISTS requests CASCADE;
drop table IF EXISTS compilations CASCADE;
drop table IF EXISTS compilations_events CASCADE;

create TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL
);

create TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

create TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR NOT NULL,
    category_id BIGINT NOT NULL REFERENCES categories (id) ON delete CASCADE,
    confirmed_requests INT NOT NULL,
    created_on TIMESTAMP NOT NULL,
    description VARCHAR NOT NULL,
    event_date TIMESTAMP NOT NULL,
    initiator_id BIGINT NOT NULL REFERENCES users (id) ON delete CASCADE,
    location_id BIGINT NOT NULL REFERENCES locations (id) ON delete CASCADE,
    paid BOOLEAN DEFAULT FALSE,
    participant_limit INT DEFAULT 0,
    published_on TIMESTAMP,
    request_moderation BOOLEAN DEFAULT TRUE,
    state VARCHAR NOT NULL,
    title VARCHAR NOT NULL,
    views BIGINT
);

create TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event BIGINT NOT NULL REFERENCES events (id) ON delete CASCADE,
    requester BIGINT NOT NULL REFERENCES users (id) ON delete CASCADE,
    status VARCHAR NOT NULL,
    created TIMESTAMP NOT NULL
);

create TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE,
    title VARCHAR(50) NOT NULL
);

create TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT NOT NULL REFERENCES compilations (id) ON delete CASCADE,
    event_id BIGINT NOT NULL REFERENCES events (id) ON delete CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);